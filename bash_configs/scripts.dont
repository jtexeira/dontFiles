# vim: set filetype=sh :
#!/bin/sh
za() {
	zathura "$1" & disown
}

f() {
    nvim -u $DOTFILES/vimrc \
        $DOTFILES/$(find $DOTFILES/* | \
        sed "s|$DOTFILES/*||g;/\.git/d" | fzf)
}

work() {
    cd $HOME/Lab/$1-2021
}

class() {
    cd $HOME/Lab/$1-classes
}

L() {
    cd $HOME/Lab/$1
}

chpp() {
    nvim -u $DOTFILES/vimrc src/$1.cpp "+:vs include/$1.hpp"
}

cl() {
    clear
    [[ -n $1 ]] && cd $1
    ls
}

modrs() {
    mkdir "$1"
    mv "$1.rs" "$1/mod.rs"
    cd "$1"
}

x() {
    [[ -n $1 ]] && cd $(find $1 -type d -not -path '*/\.*' | fzf || pwd) || cd $(find ~/etux -type d -not -path '*/\.*' | fzf || pwd)
}

aws-login() {
    while [ "$#" -gt 0 ]; do
        REGION=""
        DURATION="8h"
        case $1 in
            -r)
                shift
                REGION="--region $1"
                shift
            ;;
            -d)
                shift
                DURATION="$1"
                shift
            ;;
        esac
        link=`aws-vault login --backend=kwallet -s -d $DURATION "$1" $REGION`
        [[ $? == 0 ]] && container-launcher -n "$1" "$link"
        shift
    done
}

aws-exec() {
    REGION=""
    case $1 in
        -r)
            shift
            REGION="--region $1"
            shift
        ;;
    esac
    aws-vault exec $REGION $@
}

todo() {
    grep '#' ~/todo.md | sed 's/# //g'
}

todo_edit() {
    nvim -u $DOTFILES/vimrc ~/todo.md
}

radio() {
    echo Playing: $(grep $1 ~/radios | cut -d'\' -f1)
    grep $1 ~/radios | cut -d'\' -f2 | xargs mpv --volume=25
}

texpdf() {
    echo $1 | entr -cp pdflatex --shell-escape /_
}

tf_targets() {
    grep -P "^(resource|module) " $1 | cut -d" " -f2,3 | sed 's/ /\./g;s/\"//g;' | awk '{print "-target "$0 " "}' | tr -d '\n' | sed -E 's/-target ([^.]+)\.[{]/-target module\.\1/g'
}

rmline() {
    local file line

    file="$1"
    line="$2"

    if [ -z "$file" ]; then
        err "missing file to remove"
        return 1
    fi

    if [ -z "$line" ]; then
        line="${file##*:}"
        file="${file%:*}"
    fi

    if ! [ -e "$file" ]; then
        err "file to remove doesn't exist"
        return 1
    fi

    if [ -z "$line" ]; then
        err "missing line to remove"
        return 1
    fi

    ed -s "$file" <<-EOF
${line}d
wq
EOF
}

rgv() {
    v $(rg -l $1) "+/$1"
}

client() {
    cd $HOME/etux/clients/$1
}

aws-acc() {
    grep 'role_arn.*'"$1" -B5 ~/.aws/config | grep '\[' | cut -d" " -f2 | tr -d '\]'
}
